name: Continuous Integration (CI)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
      
jobs:
  build:
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}
        
      # Consider this as an add on to optimize the execution of actions
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
       
      - name: Install package dependencies backend
        run: npm install ./backend

      - name: Install package dependencies frontend
        run: npm install ./frontend
      
      #- name: Check linting and formatting
        # Custom script for checking the linting and formatting being in place
      #  uses: wearerequired/lint-action@v2.3.0

      
      # Run test cases and this could ensure minimum coverage as well if set
      - name: Create test build
        run: npm ./frontend run build 

      - name: Execute test cases
        run: npm ./frontend run test
        