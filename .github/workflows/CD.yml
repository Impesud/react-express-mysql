name: Continuous Deployment (CD)

on:
  workflow_run:
    workflows: ["Continuous Integration (CI)"]
    # Execute the workflow once the CI workflow is completed on main branch.
    types: [completed]
    branches: [ "master" ]

jobs:
  deploy:
    # Defines the type of runner the job runs on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 19.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}

      # Consider this as an add on to optimize the execution of actions
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install package dependencies
        run: npm install

      - name: Deploy the app
        # This assumes that there is deploy script, change as required
        run: npm run deploy
        # Environment secrets, generally stored in Github Secrets (un-comment as required)
        env:
          deployment_token: ${{ secrets.ACTIONS_DEPLOYMENT_TOKEN }}